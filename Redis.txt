1.概述
Redis 是速度非常快的非关系型（NoSQL）内存键值数据库。
键的类型只能为字符串，值支持五种数据类型：字符串、列表、集合、散列表、有序集合。
Redis 支持很多特性，例如将内存中的数据持久化到硬盘中，使用复制来扩展读性能，使用分片来扩展写性能。

2.数据类型
ZSET

3.数据结构
字典dict：dictht 是一个散列表结构，使用拉链法保存哈希冲突。

跳跃表：是有序集合的底层实现之一，基于多指针有序链表实现的，可以看成多个有序链表。
优点：
插入速度非常快速，因为不需要进行旋转等操作来维护平衡性；
更容易实现；
支持无锁操作。

4.使用场景
计数器，缓存，查找表，消息队列，会话缓存，分布式锁实现，
Set 可以实现交集、并集等操作，从而实现共同好友等功能。ZSet 可以实现有序性操作，从而实现排行榜等功能。

5.Redis 与 Memcached
两者都是非关系型内存键值数据库，主要有以下不同：
Memcached 仅支持字符串类型
Redis 支持两种持久化策略：RDB 快照和 AOF 日志，而 Memcached 不支持持久化。

Memcached 不支持分布式，只能通过在客户端使用一致性哈希来实现分布式存储，这种方式在存储和查询时都需要先在客户端计算一次数据所在的节点。Redis Cluster 实现了分布式的支持。

在 Redis 中，并不是所有数据都一直存储在内存中，可以将一些很久没用的 value 交换到磁盘，而 Memcached 的数据则会一直在内存中。Memcached 将内存分割成特定长度的块来存储数据，以完全解决内存碎片的问题。但是这种方式会使得内存的利用率不高。

6.键的过期时间
Redis 可以为每个键设置过期时间，当键过期时，会自动删除该键。
对于散列表这种容器，只能为整个键设置过期时间（整个散列表），而不能为键里面的单个元素设置过期时间。

7.数据淘汰策略
可以设置内存最大使用量，当内存使用量超出时，会施行数据淘汰策略。

8.持久化
Redis 是内存型数据库，为了保证数据在断电后不会丢失，需要将内存中的数据持久化到硬盘上。
RDB 快照和 AOF 日志。

9.事务
Redis 最简单的事务实现方式是使用 MULTI 和 EXEC 命令将事务操作包围起来。

10.事件
文件事件，时间事件，事件的调度与执行

11.复制
通过使用 slaveof host port 命令来让一个服务器成为另一个服务器的从服务器。一个从服务器只能有一个主服务器，并且不支持主主复制。

12.哨兵
Sentinel（哨兵）可以监听集群中的服务器，并在主服务器进入下线状态时，自动从从服务器中选举出新的主服务器。

13.分片
分片是将数据划分为多个部分的方法，可以将数据存储到多台机器里面，这种方法在解决某些问题时可以获得线性级别的性能提升。
























