1.分布式版本控制系统
与SVN集中式的区别：
集中式版本控制只有中心服务器拥有一份代码，而分布式版本控制每个人的电脑上就有一份完整的代码。
集中式版本控制有安全性问题，当中心服务器挂了所有人都没办法工作了。
集中式版本控制需要连网才能工作，如果网速过慢，那么提交一个文件会慢的无法让人忍受。而分布式版本控制不需要连网就能工作。
集中式版本控制新建一个分支相当于复制一份完整代码，而分布式版本控制新建分支、合并分支操作速度非常快。

2.工作流
工作区<->Stage<->History
add：把文件的修改添加到暂存区
commit：把暂存区的修改提交到当前分支，提交之后暂存区就被清空了
reset：commit逆操作
checkout：add逆操作
commit -a：工作区->History
checkout HEAD：commit -a逆操作

3.分支
Git 会使用 <<<<<<< ，======= ，>>>>>>> 标记出不同分支的内容，只需要把不同分支中冲突部分修改成一样就能解决冲突。

"快进式合并"（fast-farward merge），会直接将 master 分支指向合并的分支，这种模式下进行分支合并会丢失分支信息，也就不能在分支历史上看出分支信息。

master 分支应该是非常稳定的，只用来发布新版本；
日常开发在开发分支 dev 上进行。

在一个分支上操作之后，如果还没有将修改提交到分支上，此时进行切换分支，那么另一个分支上也能看到新的修改。这是因为所有分支都共用一个工作区的缘故。
可以使用 git stash 将当前分支的修改储藏起来，工作区没有任何未提交的修改。此时就可以安全的切换到其它分支上了。
