1.索引
B+ Tree：平衡查找树，所有叶子节点位于同一层，顺序访问指针来提高区间查询的性能。
优势：更少的查找次数，利用磁盘预读特性。
是大多数 MySQL 存储引擎的默认索引类型。不再需要进行全表扫描，只需要对树进行搜索即可，所以查找速度快很多。
除了用于查找，还可以用于排序和分组。

索引是在存储引擎层实现的，而不是在服务器层实现的，所以不同存储引擎具有不同的索引类型和实现。
哈希索引，全文索引，空间数据索引，

索引优化：

优点：
大大减少了服务器需要扫描的数据行数。
帮助服务器避免进行排序和分组，以及避免创建临时表（B+Tree 索引是有序的，可以用于 ORDER BY 和 GROUP BY 操作。临时表主要是在排序和分组过程中创建，因为不需要排序和分组，也就不需要创建临时表）。
将随机 I/O 变为顺序 I/O（B+Tree 索引是有序的，会将相邻的数据都存储在一起）。

2.查询性能优化
Explain ：用来分析 SELECT 查询语句
优化数据访问
重构查询方式

3.存储引擎
InnoDB：MySQL 默认的事务型存储引擎
MyISAM：

4.数据类型
整型，字符串，时间和日期，

5.切分
水平切分，垂直切分，
Sharding 策略

6.复制
主从复制：涉及binlog 线程、I/O 线程和 SQL 线程。
读写分离：主服务器处理写操作以及实时性要求比较高的读操作，而从服务器处理读操作。

7.事务
事务（Transaction）是用户定义的不可分割一个操作序列
事务特性（ACID）：原子性，一致性，隔离性，持久性
事务隔离级别































