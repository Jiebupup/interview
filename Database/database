1.sql数据查询
SELECT，FROM
WHERE过滤行：AND 和 OR 用于连接多个过滤条件，IN子查询，NOT否定。
DISTINCT相同值只会出现一次，所有列的值都相同才算相同。
LIMIT限制返回的行数。
ORDER BY排序：ASC ：升序（默认），DESC ：降序，可以按多个列进行排序，并且为每个列指定不同的排序方式。
GROUP BY分组：HAVING 过滤分组。
聚合函数针对某一列：AVG()，COUNT()行数，MAX()，MIN()，SUM()。

嵌套查询，条件连接查询，子查询，集合运算UNION，递归查询

连接查询
内连接inner join：返回两个表的交集 select * from inner join on;
左连接left join：左表的记录将会全部表示出来，而右表只会显示符合搜索条件的记录。右表记录不足的地方均为NULL。
右连接

2.其他
表table：CRUD创建，读取，更新，删除。

视图：虚拟的表，本身不包含数据，也就不能对其进行索引操作。
视图具有如下好处：
简化复杂的 SQL 操作，比如复杂的连接；
只使用实际表的一部分数据；
通过只给用户访问视图的权限，保证数据的安全性；
更改数据格式和表示。

游标：在存储过程中使用游标可以对一个结果集进行移动遍历。
使用游标的四个步骤：
声明游标，这个过程没有实际检索出数据；
打开游标；
取出数据；
关闭游标；

触发器：会在某个表执行以下语句时而自动执行：DELETE、INSERT、UPDATE。

3.关系数据库设计理论
函数依赖、异常
范式：1NF、2NF、3NF
ER 图：实体、属性、联系

4.事务
数据库管理系统执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成。
回退（rollback）指撤销指定 SQL 语句的过程；
提交（commit）指将未存储的 SQL 语句结果写入数据库表；
保留点（savepoint）指事务处理中设置的临时占位符（placeholder），你可以对它发布回退（与回退整个事务处理不同）。

ACID
原子性：事务被视为不可分割的最小单元，事务的所有操作要么全部提交成功，要么全部失败回滚（回滚日志记录着事务所执行的修改操作）。
一致性：数据库在事务执行前后都保持一致性状态。在一致性状态下，所有事务对一个数据的读取结果都是相同的。
隔离性：一个事务所做的修改在最终提交以前，对其它事务是不可见的。
持久性：一旦事务提交，则其所做的修改将会永远保存到数据库中。即使系统发生崩溃，事务执行的结果也不能丢失（使用重做日志来保证持久性）。

事务的原子性可以用来实现一致性，但原子性并不能完全保证一致性。在多个事务并行进行的情况下，即使保证了每一个事务的原子性，仍然可能导致数据不一致的结果。

MySQL 默认采用自动提交模式AUTOCOMMIT：如果不显式使用START TRANSACTION语句来开始一个事务，那么每个查询都会被当做一个事务自动提交。

5.sql注入攻击
服务器上的数据库运行非法的 SQL 语句，主要通过拼接来完成。访问用户通过网站前端对网站可以输入参数的地方进行提交参数，参数里插入了一些恶意参数传入到服务器后端，执行了数据库的sql语句并访问敏感信息。                         
过程：
strSQL = "SELECT * FROM users WHERE (name = '" + userName + "') and (pw = '"+ passWord +"');"
userName = "1' OR '1'='1";
passWord = "1' OR '1'='1";
strSQL = "SELECT * FROM users WHERE (name = '1' OR '1'='1') and (pw = '1' OR '1'='1');"
无需验证通过就能执行查询：strSQL = "SELECT * FROM users;"

防止手段： 
使用参数化查询：Java 中的 PreparedStatement 是预先编译的 SQL 语句，可以传入适当参数并且多次执行，没有拼接的过程。sql注入只对sql语句的编译过程有破坏作用。
单引号转换：将传入的参数中的单引号转换为连续两个单引号，PHP 中的 Magic quote 可以完成这个功能。转化成一些其他符号导致sql语句无法执行。
正则表达式过滤传入的参数


学生表，课程表，成绩表，一条sql写出每门课程的及格和不及格的学生数量。
select course
sum(case when score>=60 then 1 else 0)as 及格人数
sum(case when score<60 then 1 else 0)as 不及格人数
from score自然连接course自然连接student
group by course
