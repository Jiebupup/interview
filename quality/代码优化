1.尽量指定类、方法的 final 修饰符
Java 编译器会寻找机会内联所有的 final 方法，内联对于提升 Java 运行效率作用重大。

2.尽量重用对象
特别是 String 对象的使用，出现字符串连接时应该使用 StringBuilder 或 StringBuffer 代替。
由于 Java 虚拟机不仅要花时间生成对象，以后可能还需要花时间对这些对象进行垃圾回收和处理，因此，生成过多的对象将会给程序的性能带来很大的影响。

3.尽可能使用局部变量
调用方法时传递的参数以及在调用中创建的临时变量都保存在栈中速度较快。其他变量如静态变量、实例变量等，都在堆中创建，速度较慢。
另外，栈中创建的变量，随着方法的运行结束，这些内容就没了，不需要额外的垃圾回收。

4.及时关闭流
进行数据库连接、I/O 流操作时务必小心，在使用完毕后，及时关闭以释放资源。因为对这些大对象的操作会造成系统大的开销，稍有不慎，将会导致严重的后果。

5.尽量减少对变量的重复计算


6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.
19.
20.
21.
22.
23.
24.
25.
26.
27.
28.
29.
30.
31.
32.
33.
34.
35.
